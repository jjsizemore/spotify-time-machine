[tools]
node = { version = "latest", postinstall = "corepack enable" }
pnpm = "latest"

# Formatting & Linting
prettier = "latest"
typos = "latest"
taplo = "latest"

# Security & Quality
dotenv-linter = "latest"
trufflehog = "latest"
snyk = "latest"

# Required for semgrep to work properly
uv = "latest"
semgrep = "latest"

# Shell & CI/CD
shellcheck = "latest"
actionlint = "latest"

# Git Hooks (alternative to husky)
lefthook = "latest"

[settings]
experimental = true

[env]
_.path = ['./node_modules/.bin']

[tasks.pnpm-install]
description = 'Installs dependencies with pnpm'
run = 'pnpm install'
sources = ['package.json', 'pnpm-lock.yaml', 'mise.toml']
outputs = ['node_modules/.pnpm/lock.yaml']

[tasks.dev]
description = 'Starts the development server with Turborepo'
run = 'turbo dev'
depends = ['pnpm-install']

[tasks.build]
description = 'Builds the application with Turborepo'
run = 'turbo build'
depends = ['pnpm-install']

[tasks.lint]
description = 'Runs linting with Turborepo'
run = 'turbo lint'
depends = ['pnpm-install']

[tasks.fmt]
description = 'Runs formatting with Turborepo'
run = '''
turbo fmt
taplo fmt
'''
depends = ['pnpm-install']

[tasks.fmt-check]
description = 'Checks formatting without making changes'
run = '''
prettier --check "**/*.{js,jsx,ts,tsx,json,md,css,yaml,yml}"
taplo check
'''
depends = ['pnpm-install']

[tasks.toml-fmt]
description = 'Formats TOML files with taplo'
run = "taplo fmt"

[tasks.toml-check]
description = 'Checks TOML file formatting with taplo'
run = "taplo check"

[tasks.type-check]
description = 'Runs TypeScript type checking with Turborepo'
run = 'turbo type-check'
depends = ['pnpm-install']

[tasks.check]
description = 'Runs all checks (lint + type-check) with Turborepo'
run = 'turbo check'
depends = ['pnpm-install']

[tasks.check-all]
description = 'Runs all checks (lint + fmt + type-check + toml) with Turborepo'
run = "turbo check:all && taplo check"
depends = ['pnpm-install']

[tasks.clean]
description = 'Cleans the project with Turborepo'
run = 'turbo clean'

[tasks.clean-cache]
description = 'Cleans cache with Turborepo'
run = 'turbo clean:cache'

[tasks.clean-all]
description = 'Cleans everything with Turborepo'
run = 'turbo clean:all'

# Security & Quality Tasks
[tasks.security]
description = 'Runs all security checks (trufflehog + snyk + dotenv-linter + semgrep)'
run = '''
echo "üîç Running security checks..."
trufflehog filesystem . --no-update --fail --exclude-paths=.trufflehog-exclude.txt || true
dotenv-linter || true
snyk test --all-projects || true
semgrep --config semgrep.yml || true
echo "‚úÖ Security checks complete!"
'''
depends = ['pnpm-install']

[tasks.security-trufflehog]
description = 'Scan for secrets with TruffleHog'
run = 'trufflehog filesystem . --no-update --fail --exclude-paths=.trufflehog-exclude.txt'

[tasks.security-snyk]
description = 'Run Snyk vulnerability scan'
run = 'snyk test --all-projects'

[tasks.security-semgrep]
description = 'Run Semgrep SAST scan'
run = 'semgrep --config semgrep.yml'
depends = ['pnpm-install']

[tasks.security-dotenv]
description = 'Lint .env files'
run = 'dotenv-linter'

[tasks.spellcheck]
description = 'Check for typos in code and docs'
run = 'typos'

[tasks.shellcheck]
description = 'Lint shell scripts'
run = 'find . -name "*.sh" -not -path "*/node_modules/*" -not -path "*/.next/*" | xargs shellcheck || echo "No shell scripts found"'

[tasks.actionlint]
description = 'Lint GitHub Actions workflows'
run = 'actionlint .github/workflows/*.yml 2>/dev/null || echo "No workflows found or actionlint not available"'

[tasks.hooks-install]
description = 'Install git hooks with lefthook'
run = 'lefthook install'

[tasks.hooks-run]
description = 'Run all git hooks manually'
run = 'lefthook run pre-commit'

[tasks.audit]
description = 'Run comprehensive audit (security + quality checks)'
run = '''
echo "üîç Running comprehensive audit..."
mise run security
mise run spellcheck
mise run check-all
echo "‚úÖ Audit complete!"
'''
depends = ['pnpm-install']

[tasks.analyze]
description = 'Analyzes the build with Turborepo'
run = 'turbo analyze'
depends = ['pnpm-install']

[tasks.start]
description = 'Starts the production server with Turborepo'
run = 'turbo start'
depends = ['pnpm-install']
