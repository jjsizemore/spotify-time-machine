name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.18.1'

jobs:
  # Quality checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint
        continue-on-error: false

      - name: Format check
        run: pnpm run fmt
        continue-on-error: false

      - name: Type check
        run: pnpm run type-check
        continue-on-error: false

      - name: Spell check
        run: pnpm run spellcheck
        continue-on-error: true

  # Build verification
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [quality]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build
        env:
          # Disable telemetry during build
          NEXT_TELEMETRY_DISABLED: 1

      - name: Cache build output
        uses: actions/cache/save@v4
        with:
          path: .next
          key: ${{ runner.os }}-next-build-${{ github.sha }}

  # Security checks
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [quality]
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security checks
        run: pnpm run security
        continue-on-error: true

  # Status check
  ci-status:
    name: CI Status
    if: ${{ !cancelled() }}
    needs: [quality, build, security]
    runs-on: ubuntu-latest
    steps:
      - name: Check status
        run: |
          echo "Quality: ${{ needs.quality.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Security: ${{ needs.security.result }}"

          if [[ "${{ needs.quality.result }}" == "success" && 
                "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ All required checks passed!"
            exit 0
          else
            echo "❌ Some required checks failed"
            exit 1
          fi
